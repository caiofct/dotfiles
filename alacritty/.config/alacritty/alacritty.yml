# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
    # TERM env customization.
    #
    # If this property is not set, alacritty will set it to xterm-256color.
    #
    # Note that some xterm terminfo databases don't declare support for italics.
    # You can verify this by checking for the presence of `smso` and `sitm` in
    # `infocmp xterm-256color`.
    TERM: xterm-256color

window:
    dimensions:
        columns: 0
        lines: 0
    dynamic_padding: false
    decorations: none
    startup_mode: Windowed

    # Adds this many blank pixels of padding around the window
    # Units are physical pixels; this is not DPI aware.
    # (change requires restart)
    padding:
        x: 20
        y: 10

    # Window decorations
    # Available values:
    # - `full`: Window with title bar and title bar buttons
    # - `none`: Window without title bar, rounded corners, or drop shadow
    # - `transparent`: Window with title bar with transparent background and title
    #   bar buttons
    # - `buttonless`: Window with title bar with transparent background and no
    #   title bar buttons
    decorations: buttonless

scrolling:
    # How many lines of scrollback to keep,
    # '0' will disable scrolling.
    history: 10000

    # Number of lines the viewport will move for every line
    # scrolled when scrollback is enabled (history > 0).
    multiplier: 3

    # Automatically scroll to the bottom when new text is written
    # to the terminal.
    auto_scroll: false

# Spaces per Tab
#
# This setting defines the width of a tab in cells. Changes to this
# value require a restart to take effect.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
tabspaces: 8

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Font configuration (changes require restart)
font:
    # The normal (roman) font face to use.
    normal:
        family: "Hack Nerd Font"
        # Style can be specified to pick a specific face.
        # style: Regular

    # The bold font face
    bold:
        family: "Hack Nerd Font"
        # Style can be specified to pick a specific face.
        # style: Bold

    # The italic font face
    italic:
        family: "Hack Nerd Font"
        # Style can be specified to pick a specific face.
        # style: Italic

    # Point size of the font
    size: 18.5

    # Offset is the extra space around each character. offset.y can be thought of
    # as modifying the linespacing, and offset.x as modifying the letter spacing.
    offset:
        x: 0
        y: 0

    # Glyph offset determines the locations of the glyphs within their cells with
    # the default being at the bottom. Increase the x offset to move the glyph to
    # the right, increase the y offset to move the glyph upward.
    glyph_offset:
        x: 0
        y: 0

    # Scale the font size based on the monitor's DPI. This will lead to bigger text on HiDPI
    # screens and make reading text a little easier.
    scale_with_dpi: true

    # OS X only: use thin stroke font rendering. Thin strokes are suitable
    # for retina displays, but for non-retina you probably want this set to
    # false.
    use_thin_strokes: true

# Should display the render timer
#render_timer: false

# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
custom_cursor_colors: false

# Colors (Snazzy)
colors:
    # Default colors
    primary:
        background: "0x212733"
        foreground: "0xCCC9C2"

        # (Optional) Bright and Dim foreground colors
        #
        # The dimmed foreground color is calculated automatically if it is not present.
        # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
        # is `false`, the normal foreground color will be used.
        #
        # dim_foreground: '0x9a9a9a'
        # bright_foreground: '0xffffff'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
        text: "0x000000"
        cursor: "0xffffff"

    # Normal colors
    normal:
        black: "0x212733"
        red: "0xF28779"
        green: "0xBAE67E"
        yellow: "0xFFCC66"
        blue: "0x73D0FF"
        magenta: "0xD4BFFF"
        cyan: "0x5CCFE6"
        white: "0xffffff"

    # Bright colors
    bright:
        black: "0x666666"
        red: "0xff3334"
        green: "0x9ec400"
        yellow: "0xe7c547"
        blue: "0x7aa6da"
        magenta: "0xb77ee0"
        cyan: "0x54ced6"
        white: "0xffffff"

    # Dim colors (Optional)
    dim:
        black: "0x333333"
        red: "0xf2777a"
        green: "0x99cc99"
        yellow: "0xffcc66"
        blue: "0x6699cc"
        magenta: "0xcc99cc"
        cyan: "0x66cccc"
        white: "0xdddddd"

bell:
  animation: EaseOutExpo
  duration: 2
  color: '0x000000'

# Background opacity
background_opacity: 1.0

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
    - { mouse: Middle, action: PasteSelection }

mouse:
    # Click settings
    #
    # The `double_click` and `triple_click` settings control the time
    # alacritty should wait for accepting multiple clicks as one double
    # or triple click.
    double_click: { threshold: 300 }
    triple_click: { threshold: 300 }

selection:
    semantic_escape_chars: ',â”‚`|:"'' ()[]{}<>'

dynamic_title: true

hide_cursor_when_typing: false

# Style of the cursor
#
# Values for 'cursor_style':
# - Block
# - Underline
# - Beam
cursor_style: Block

# Whether the cursor should be a hollow block on window focus loss
unfocused_hollow_cursor: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
#
# shell:
#   program: /bin/bash
#   args:
#     - --login

# Setup some amazing custom key bindings here - Best thing is you can setup key bindings
# using Mac's 'command' to control your tmux.
# A great reference: https://arslan.io/2018/02/05/gpu-accelerated-terminal-alacritty/#make-alacritty-feel-like-iterm2
key_bindings:
  # Use command + [ - to go to previous tmux window
  - { key: LBracket, mods: Command, chars: "\x5c\x70" }
  # Use command + ] - to go to previous tmux window
  - { key: RBracket, mods: Command, chars: "\x5c\x6e" }
  # ctrl-^ doesn't work in some terminals like alacritty
  - { key: Key6, mods: Control, chars: "\x1e" }
